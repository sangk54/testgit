#
# Installer Configuration files
# all definitions on this subtree must prefix with INSTALLER_
#

choice
    prompt "Firmware deployment mode"

config INSTALLER_MODE_ATTACHED_BOARD
	bool "Attached board on communication port"
	help
	    On this deployment mode the board is expected to be
	    attached to the machine running the installer via
	    serial or termnet communication

config INSTALLER_MODE_SD_CARD
	bool "Deploy all the firmware to an SD card"
	depends on BSP_ARCH_SUPPORTS_SD_CARD_INSTALLER_MODE
	help
	    On this deployment mode the firmware will be
	    deployed to an SD card

config INSTALLER_MODE_SD_CARD_INSTALLER
	bool "Create an SD card installer for flash memory"
	depends on BSP_ARCH_SUPPORTS_SD_CARD_INSTALLER_MODE
	help
	    On this deployment mode the SD card will have an
	    installer capable of programming flash memory

endchoice

config INSTALLER_LOAD_ADDRS
    hex "RAM address to load components"
    default 0x82000000
    help
	This is the address in RAM where components will be loaded.
        Watch out to not overlap with U-boot RAM Address

config INSTALLER_HOST_NET_INTERFACE
    string "Interface on your host machine connected to your target hardware"
    default "eth0"
    depends on INSTALLER_MODE_ATTACHED_BOARD || (INSTALLER_MODE_SD_CARD && FS_TARGET_NFSROOT) || INSTALLER_MODE_TFTP_KERNEL
    help
     If you are going to deploy over tftp or use NFS root mount, you need to
     specify which network interface in your host machine faces the target
     hardware in order for the SDK to identify the network address to use

# Start - Attached Board

if INSTALLER_MODE_ATTACHED_BOARD || INSTALLER_MODE_SD_CARD_INSTALLER
comment "Installer to U-boot communication options"

choice
    prompt "Communication method with the target board"

config INSTALLER_SERIAL_COM
	bool "Serial port"
	
config INSTALLER_TELNET_COM
	bool "Telnet-serial adaptor"
	depends on BSP_ARCH_DM8148 || BSP_ARCH_DM8168

endchoice

config INSTALLER_TELNET_COM_IP
	string "IP address of telnet-serial adaptor"
	depends on INSTALLER_TELNET_COM

config INSTALLER_TELNET_COM_PORT
	string "Network port of telnet-serial adaptor"
	depends on INSTALLER_TELNET_COM
	
config INSTALLER_SERIAL_COM_PORT
	string "Serial port for target communication"
	default "/dev/ttyS0"
	depends on INSTALLER_SERIAL_COM

config INSTALLER_SERIAL_COM_BAUD
	string "Serial port baudrate for target communication"
	default "115200"
	depends on INSTALLER_SERIAL_COM

endif #INSTALLER_MODE_ATTACHED_BOARD || INSTALLER_MODE_SD_CARD_INSTALLER
# Load Kernel via TFTP Options
config INSTALLER_MODE_TFTP_KERNEL
	bool "Start kernel via tftp"
	default n
	depends on BSP_ARCH_IMX6 && INSTALLER_MODE_SD_CARD  
	help
	    With this mode the kernel image is going to be loaded to ram 
	    from a tftp server instead of an sdcard or on board momory every
	    time the board starts

if (INSTALLER_MODE_ATTACHED_BOARD || INSTALLER_MODE_TFTP_KERNEL)
comment "Transfer options for installation"
choice 
    prompt "Protocol for transfering images to the target"

config INSTALLER_TFTP_METHOD
	bool "TFTP"
	depends on UBOOT_NETWORKING

#config INSTALLER_DFU_METHOD
#	bool "USB DFU"
#	depends on UBOOT_USBD

#config INSTALLER_SERIAL_METHOD
#	bool "Serial"

endchoice

config INSTALLER_TFTP_SERVER_DIRECTORY
	string "TFTP server path"
	depends on INSTALLER_TFTP_METHOD
	default "/srv/tftp"

if INSTALLER_TFTP_METHOD
comment "Network options for installation"

choice 
        prompt "U-boot IP address"

config INSTALLER_DHCP
	bool "DHCP"

config INSTALLER_STATIC_IP
	bool "Static IP address"
		
endchoice

config INSTALLER_IPADDR 
	string "Static IP"
	default "192.168.1.2"
	depends on INSTALLER_STATIC_IP
	 
config INSTALLER_MSKADDR
	string "Static mask"
	default "255.255.255.0"
	depends on INSTALLER_STATIC_IP
endif
endif # INSTALLER_MODE_ATTACHED_BOARD || INSTALLER_MODE_TFTP_KERNEL


# End - Attached Board

config INSTALLER_SD_DEVICE_LOOPBACK
	bool "Flash SD card image into loopback file instead of real SD"
	default y
	depends on INSTALLER_MODE_SD_CARD || INSTALLER_MODE_SD_CARD_INSTALLER
	help
	  With this option enabled the SDK will generate a file on
	  images/sdcard.img

config INSTALLER_MODE_EMMC
	bool "Flash SD card image to eMMC"
	default n
	depends on INSTALLER_MODE_SD_CARD && BSP_ARCH_AM5728 && INSTALLER_SD_DEVICE_LOOPBACK
	help
	  With this option enabled the SDK configures the images/sdcard.img file, 
	  so that, the built image can be installed in the eMMC onboard memory, 
	  using the given /usr/scripts/eMMC_flasher script.

config INSTALLER_SD_DEVICE_LOOPBACK_SIZE
	string "Size of loopback device for SD card (in MB)"
	default 512
	depends on INSTALLER_SD_DEVICE_LOOPBACK
	help
	  This is the size of the SD card to be simulated as loopback device

config INSTALLER_SD_DEVICE
	string "SD device on Linux host"
	default "/dev/sdX"
	depends on (INSTALLER_MODE_SD_CARD || INSTALLER_MODE_SD_CARD_INSTALLER || FS_TARGET_SD) && !INSTALLER_SD_DEVICE_LOOPBACK
	help
	  This is the name of the device where the SD card is on your Linux hosts

choice
    prompt "Root Filesystem type for SD card"
    depends on FS_TARGET_SD

config INSTALLER_SD_ROOTFS_TYPE_EXT3
	bool "Extended 3 File system (ext3)"
	select EXT3_FS
	help
	    Create a extended 3 (ext3) file system for SD

config INSTALLER_SD_ROOTFS_TYPE_EXT4
	bool "Extended 4 File system (ext4)"
	select EXT4_FS
	select LBDAF
	help
	    Create a extended 4 (ext4) file system for SD

config INSTALLER_SD_ROOTFS_TYPE_EXT4_NO_JOURNAL
	bool "Extended 4 File system (ext4, no journaling)"
	select EXT4_FS
	select LBDAF
	help
	    Create a extended 4 (ext4) file system for SD without journaling.
	    
	    By selecting the "writeback" data mode ext4 does not journal data
	    at all. A crash+recovery can cause incorrect data to appear in files
	    which were written shortly before the crash. This mode provides the
	    best ext4 performance.

endchoice

config INSTALLER_SD_ROOTFS_SIZE
	string "Minimal size of rootfs (MB)"
	default "-"
	depends on FS_TARGET_SD
	help
	  Defines the minimal root fs size (the real size depends on disk geometry)
	  Use "-" for using all the available disk size.


# Start - Mode SD Card

#source installer/u-boot-installer/methods/sd_card/Config
if INSTALLER_MODE_SD_CARD
comment "Install on SD card options"
config INSTALLER_UBOOT_PARTITION_SIZE
	string "Size of U-Boot VFAT partition (in MB)"
	default 39
	help
		The first partition on the SD card is a VFAT file system
		containing the uboot environement variables and the kernel.
		If other files need to be saved in the first partition, increase
		the size.  Note: Windows only mounts the first VFAT partition,
		so if you need to save files on the SD card that are readable by
		a Windows machine, use this setting to make room for those
		files.  If your root file system is initramfs, then the kernel
		image file will also contain the entire root file system, so
		the U-Boot VFAT partition will need to be larger.

endif # INSTALLER_MODE_SD_CARD

# End - Mode SD Card

comment "NOR Flash memory map (Partitions sizes are given in blocks number)"
	depends on UBOOT_NOR_FLASH_MEMORY
comment "NAND Flash memory map (Partitions sizes are given in blocks number)"
	depends on UBOOT_NAND_FLASH_MEMORY
comment "OneNAND Flash memory map (Partitions sizes are given in blocks number)"
	depends on UBOOT_ONENAND_FLASH_MEMORY

if UBOOT_SPI_FLASH_MEMORY || UBOOT_ONENAND_FLASH_MEMORY || UBOOT_NOR_FLASH_MEMORY || UBOOT_NAND_FLASH_MEMORY
config INSTALLER_UBOOT_SIZE_IN_BLKS
	string "Uboot partition size"

config INSTALLER_KERNEL_SIZE_IN_BLKS
	string "Minimum kernel partition size"
	
config INSTALLER_FS_SIZE_IN_BLKS
	string "Mininum file system partition size"

comment "MTD Integration options"

config INSTALLER_MTD_UBOOT_INTEGRATION
	bool "Configure Kernel MTD partitions with U-boot information"
	default y
	select MTD
	select MTD_CHAR
	select MTD_BLOCK
	select MTD_PARTITIONS
	select MTD_CMDLINE_PARTS
	help 
	    Allows U-boot to pass information to the Kernel about MTD partitions

config INSTALLER_MTD_DEVICE_NAME
	string "MTD device name"
	depends on INSTALLER_MTD_UBOOT_INTEGRATION
	help
	    Unique name used in mapping driver/device (mtd->name)

config INSTALLER_MTD_EXTRA_PARTITIONS
	string "MTD extra partitions"
	default ""
	help
	  To add extra partitions just write them using the following format: 
	  size1(name1),size2(name2),... 
	  Where 'size' is the size of the partition and 'name' is the partitions name.
	  For example: 1024k(extra1),3m(extra2) 

endif
