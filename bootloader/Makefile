#$L$
# Copyright (C) 2007 Ridgerun (http://www.ridgerun.com). 
#
#  This source code has a dual license.  If this file is linked with other
#  source code that has a GPL license, then this file is licensed with a GPL
#  license as described below.  Otherwise the source code contained in this
#  file is property of Ridgerun. This source code is protected under
#  copyright law.
#
#  This program is free software; you can redistribute  it and/or modify it
#  under  the terms of  the GNU General  Public License as published by the
#  Free Software Foundation;  either version 2 of the  License, or (at your
#  option) any later version.
#
#  THIS  SOFTWARE  IS  PROVIDED  ``AS  IS''  AND   ANY  EXPRESS  OR IMPLIED
#  WARRANTIES,   INCLUDING, BUT NOT  LIMITED  TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN
#  NO  EVENT  SHALL   THE AUTHOR  BE    LIABLE FOR ANY   DIRECT,  INDIRECT,
#  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
#  NOT LIMITED   TO, PROCUREMENT OF  SUBSTITUTE GOODS  OR SERVICES; LOSS OF
#  USE, DATA,  OR PROFITS; OR  BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
#  ANY THEORY OF LIABILITY, WHETHER IN  CONTRACT, STRICT LIABILITY, OR TORT
#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
#  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
#  You should have received a copy of the  GNU General Public License along
#  with this program; if not, write  to the Free Software Foundation, Inc.,
#  675 Mass Ave, Cambridge, MA 02139, USA.
#$L$

.PHONY: build chkconfig preconfig buildfs clean

ifeq ($(DEVDIR),)
$(error ====== DEVDIR variable is empty, invoke this Makefile from the BSP root, or provide the path to it =====)
endif

export USE_BOOTLOADER_TOOLCHAIN=y

include $(DEVDIR)/bsp/mach/Make.conf

build:
	$(V)for i in `ls` ; do \
	    if [ "$$i" != ".svn" ] && [ -d "$$i" ] ; then \
		    $(MAKE) -C $$i $(MAKE_CALL_PARAMS) build || { exit 1 ; } ; \
	    fi ; \
	done

preconfig:
	@echo -e "#This file is autogenerated by makefile, don't modify" > ConfigExtra
	$(V)for i in `ls` ; do \
	    if [ "$$i" != ".svn" ]  && [ -d "$$i" ] ; then \
	        if grep -q "^preconfig:" $$i/Makefile ; then \
		    	$(MAKE) -C $$i $(MAKE_CALL_PARAMS) preconfig || { exit 1 ; } ; \
	        fi; \
			if [ -e $$i/ConfigExtra ] ; then \
				echo -e "source bootloader/$$i/ConfigExtra" > ConfigExtra; \
			fi; \
	    fi ; \
	done

chkconfig:
	$(V)for i in `ls` ; do \
	    if [ "$$i" != ".svn" ] && [ -d "$$i" ] ; then \
				$(MAKE) -C $$i $(MAKE_CALL_PARAMS) chkconfig || { exit 1 ; } ; \
	    fi ; \
	done

unpatch:
	$(V)for i in `ls` ; do \
	    if [ "$$i" != ".svn" ] && [ -d "$$i" ] ; then \
				$(MAKE) -C $$i $(MAKE_CALL_PARAMS) unpatch || { exit 1 ; } ; \
	    fi ; \
	done

buildfs:
	$(V)for i in `ls` ; do \
	    if [ "$$i" != ".svn" ] && [ -d "$$i" ] ; then \
				$(MAKE) -C $$i $(MAKE_CALL_PARAMS) buildfs || { exit 1 ; } ; \
	    fi ; \
	done

patch:
	$(V)for i in `ls` ; do \
	    if [ "$$i" != ".svn" ] && [ -d "$$i" ] ; then \
				$(MAKE) -C $$i $(MAKE_CALL_PARAMS) patch || { exit 1 ; } ; \
	    fi ; \
	done

clean:
	$(V)for i in `ls` ; do \
	    if [ "$$i" != ".svn" ] && [ -d "$$i" ] ; then \
				$(MAKE) -C $$i $(MAKE_CALL_PARAMS) clean || { exit 1 ; } ; \
	    fi ; \
	done


